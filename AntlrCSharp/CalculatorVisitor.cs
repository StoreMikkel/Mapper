//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from c:/Users/ajapo/Desktop/Repositories/CalculatorLanguage/AntlrCSharp/Calculator.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="CalculatorParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.CLSCompliant(false)]
public interface ICalculatorVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="CalculatorParser.input"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInput([NotNull] CalculatorParser.InputContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CalculatorParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStatement([NotNull] CalculatorParser.StatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CalculatorParser.calculation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCalculation([NotNull] CalculatorParser.CalculationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CalculatorParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpression([NotNull] CalculatorParser.ExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CalculatorParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTerm([NotNull] CalculatorParser.TermContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CalculatorParser.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFactor([NotNull] CalculatorParser.FactorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CalculatorParser.number"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNumber([NotNull] CalculatorParser.NumberContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CalculatorParser.ifStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIfStatement([NotNull] CalculatorParser.IfStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CalculatorParser.condition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCondition([NotNull] CalculatorParser.ConditionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CalculatorParser.whileStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitWhileStatement([NotNull] CalculatorParser.WhileStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CalculatorParser.variableDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariableDeclaration([NotNull] CalculatorParser.VariableDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CalculatorParser.variableAssignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariableAssignment([NotNull] CalculatorParser.VariableAssignmentContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CalculatorParser.forLoop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitForLoop([NotNull] CalculatorParser.ForLoopContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CalculatorParser.crementer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCrementer([NotNull] CalculatorParser.CrementerContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CalculatorParser.compare"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCompare([NotNull] CalculatorParser.CompareContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CalculatorParser.arrayDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArrayDeclaration([NotNull] CalculatorParser.ArrayDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CalculatorParser.arrayAssignement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArrayAssignement([NotNull] CalculatorParser.ArrayAssignementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CalculatorParser.arrayAccess"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArrayAccess([NotNull] CalculatorParser.ArrayAccessContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CalculatorParser.arrayDeclaration2d"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArrayDeclaration2d([NotNull] CalculatorParser.ArrayDeclaration2dContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CalculatorParser.arrayAssignment2d"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArrayAssignment2d([NotNull] CalculatorParser.ArrayAssignment2dContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CalculatorParser.arrayAccess2d"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArrayAccess2d([NotNull] CalculatorParser.ArrayAccess2dContext context);
}
